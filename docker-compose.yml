services:
  backend:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        daphne -b 0.0.0.0 -p 8000 core.asgi:application
      "
    depends_on:
      - kafka
      - zookeeper
      - redis

  backend_testing_agent:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    command: python manage.py run_testing_agent
    depends_on:
      - kafka
      - zookeeper
      - zap
    environment:
      KAFKA_BROKER: kafka:9092

  backend_analysis_agent:
    build:
      context: ./backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    command: python manage.py run_analysis_agent
    depends_on:
      - kafka
      - zookeeper
    environment:
      KAFKA_BROKER: kafka:9092

  frontend:
    build:
      context: ./frontend
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: npm run dev
    ports:
      - "3000:3000"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    
  zap:
    image: ghcr.io/zaproxy/zaproxy
    container_name: zap
    env_file:
      - ./backend/.env
    command: >
      zap.sh -daemon
      -host 0.0.0.0
      -port 8080
      -config api.addrs.addr.name=.* 
      -config api.addrs.addr.regex=true
      -config api.key=
    ports:
      - "8080:8080"  
      - "8090:8090"
    networks:
      - default